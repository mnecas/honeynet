---
- name: "Import ovf VM {{ item.name }}"
  community.vmware.vmware_deploy_ovf:
    hostname: "{{ esxi_hostname }}"
    username: "{{ esxi_username }}"
    password: "{{ esxi_password }}"
    validate_certs: "{{ validate_certs }}"
    networks: "{u'VM Network':u'{{ item.portgroup_name }}'}"
    name: "{{ item.name }}"
    ovf: "{{ item.ovf_image | default(ovf_image, true) }}"
    wait_for_ip_address: true
  delegate_to: localhost
  register: vm

- name: wait for ip being available
  community.vmware.vmware_vm_info:
    hostname: "{{ esxi_hostname }}"
    username: "{{ esxi_username }}"
    password: "{{ esxi_password }}"
    validate_certs: "{{ validate_certs }}"
    vm_name: "{{ item.name }}"
  delegate_to: localhost
  register: facts
  until: facts.instance.ipv4 is not none
  retries: 30
  delay: 2

- set_fact:
    vm_addr: "{{ facts['virtual_machines'][0]['ip_address'] }}"

- set_fact:
    honeypots_ips: "{{ honeypots_ips + [vm_addr] }}"
  when: ishoneypot

- name: "Add ansible host: {{ item.vmware_vm_ssh_user }}"
  ansible.builtin.add_host:
    hostname: "{{ vm_addr }}"
    ansible_ssh_user: "{{ item.vmware_vm_ssh_user | default(omit) }}"
    ansible_password: "{{ item.vmware_vm_ssh_pass | default(omit) }}"
    ansible_port: "{{ item.vmware_vm_ssh_port | default(omit) }}"
    ansible_ssh_private_key_file: "{{ item.vmware_vm_ssh_key_file | default(omit) }}"
    compose_file: "{{ item.compose_file }}"
    honeypot_name: "{{ item.name }}"
    data_vm_ip: "{{ data_vm_ip }}"
    honeypots_ips: "{{ honeypots_ips }}"
    vmware_vm_ssh_pass: "{{ vmware_vm_ssh_pass | default(omit)}}"
    group: added_hosts
